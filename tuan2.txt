//bai 1
#include<iostream>
#include<iomanip>
using namespace std;
class KH{
    private:
        char hoten[30];
        struct NS{
            int ngay,thang,nam;
        };
        NS a;
        char cmt[10];
        char hokhau[50];
    public:
        void nhap(){
            cin.ignore();
            cout << "\nNhap ho ten: ";
            cin.getline(hoten,30);
            do{
                cout << "\nNhap ngay sinh: ";
                cin >> a.ngay;
            } while(a.ngay > 31 || a.ngay < 0);
            do{
                cout << "\nNhap thang sinh: ";
                cin >> a.thang;
            } while(a.thang > 12 || a.thang <0);
            cout << "\nNhap nam sinh: ";
            cin >> a.nam;
            fflush(stdin);
            cout << "\nNhap so chung minh thu: ";
            cin.getline(cmt,10);
            cout << "\nNhap ho khau: ";
            cin.getline(hokhau,50);
        }
        void tieude(){
            cout << setw(20) << left << "HO TEN";
            cout << setw(25) << left << "NGAY THANG NAM SINH";
            cout << setw(25) << left << "SO CHUNG MINH THU";
            cout << setw(30) << left << "HO KHAU" << endl;
        }
        void xuat(){
            cout << setw(20) << left << hoten;
            cout << setw(2) << left << a.ngay << setw(1) << left << "/" << setw(2) << left << a.thang  << setw(1) << left << "/"  << setw(19) << left << a.nam;
            cout << setw(25) << left << cmt;
            cout << setw(30) << left << hokhau << endl;
        }
        int getthang(){
            return a.thang;
        }
        void sinhnhat(){
            if(getthang()== 12){
                xuat();
            }
        }
        int getten(){
            return hoten;
        }
};
int main(){
    KH a[1000];
    int n;
    cout << "\nNhap so khach hang: ";
    cin >> n;
    for(int i=0;i<n;i++){
        cout << "\n\tKhach hang thu " << i+1 ;
        a[i].nhap();
    }
    cout << "\n\t---DANH SACH KHACH HANG---\n";
    a[n].tieude();
    for(int i=0;i<n;i++){
        a[i].xuat();
    }
    cout << "\n\t---DANH SACH KHACH HANG SINH NHAT THANG 12---\n";
    a[n].tieude();
    for(int i=0;i<n;i++){
        a[i].sinhnhat();
    }
    return 0;
}
/*bai 2
#include<iostream>
#include<iomanip>
using namespace std;
class GV{
    private:
        char ten[30];
        int tuoi;
        char bangcap[15];
        char chuyennganh[20];
        float luong;
    public:
        void nhap(){
            cin.ignore();
            cout << "\nNhap ho ten: ";
            cin.getline(ten,30);
            cout << "\nNhap tuoi: ";
            cin >> tuoi;
            cin.ignore();
            cout << "\nNhap bang cap: ";
            cin.getline(bangcap,15);
            cout << "\nNhap chuyen nganh: ";
            cin.getline(chuyennganh,20);
            cout << "\nNhap he so luong: ";
            cin >> luong;
            
        }
        void tieude(){
            cout << setw(20) << "Ho ten" ;
            cout << setw(10) << "Tuoi" ;
            cout << setw(15) << "Bang cap" ;
            cout << setw(20) << "Chuyen nganh" ;
            cout << setw(15) << "He so luong";
            cout << setw(15) << "Luong can ban"<< endl;
        }
        void xuat(){
            cout << setw(20) << ten;
            cout << setw(10) << tuoi;
            cout << setw(15) << bangcap ;
            cout << setw(20) << chuyennganh ;
            cout << setw(15) << luong;
            cout << setw(15) << luong*610 << endl;
        }
        float getluong(){	//ham lay luong o private ra public
        	return luong;
        }
};
int main(){
    GV a[10000];
    int n;
    cout << "\nNhap so nhan vien: ";
    cin >> n;
    cout << "\n\t---Nhap thong tin giao vien---\n";
    for(int i=0;i<n;i++){
        cout << "\nGiao vien thu: "<< i+1 << endl;
        a[i].nhap();
    }
    cout << "\n\t---Thong tin giao vien---\n";
    a[n].tieude();
    for(int i=0;i<n;i++){
        a[i].xuat();
    }
    cout << "\n\t---Giao vien co tien luong nho hon 2000--\n";
    a[n].tieude();
    for(int i=0;i<n;i++){
        if((a[i].getluong()*610) < 2000){
            a[i].xuat();
        }
    }
    return 0;
}*/
